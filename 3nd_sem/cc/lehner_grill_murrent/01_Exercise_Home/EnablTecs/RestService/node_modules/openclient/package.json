{
  "name": "openclient",
  "version": "1.7.9",
  "description": "An opinionated client for RESTful APIs (particularly OpenStack's).",
  "homepage": "https://github.com/gabrielhurley/js-openclient",
  "keywords": [
    "client",
    "rest",
    "openstack"
  ],
  "author": {
    "name": "Gabriel Hurley",
    "email": "gabriel@strikeawe.com",
    "url": "http://strikeawe.com"
  },
  "main": "index.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/gabrielhurley/js-openclient.git"
  },
  "dependencies": {
    "async": "*",
    "underscore": "*"
  },
  "devDependencies": {
    "chai": "1.2.0",
    "mocha": ">= 1.3.2",
    "jshint": "*"
  },
  "contributors": [
    {
      "name": "Gabriel Hurley",
      "email": "gabriel@strikeawe.com",
      "url": "http://strikeawe.com"
    }
  ],
  "readme": "# An Opinionated Client for RESTful APIs #\n\nThis project aims to provide a very opinionated core client which can be used in\neither node.js or in the browser (browser support not yet complete) to communicate\nwith a RESTful APIs, including but not limited to any OpenStack-compatible API.\n\nThe aims of this project are very specific:\n\n1. Require absolutely minimum boilerplate code for adding new API\n   resource managers.\n\n2. Provide an extremely stable, backwards-compatible, carefully maintained\n   API to users of this library. Changes in remote APIs should be managed\n   under-the-hood when necessary.\n\n2. Do not support every legacy authentication mechanism or every legacy vagary\n   of remote APIs. (The included OpenStack components are intended for use on\n   Essex or newer OpenStack deployments running Keystone authentication.)\n\n3. Do not mirror the APIs precisely. Instead provide a clean interface which is\n   consistent across __every__ API resource and raise `NotImplemented` errors\n   when a method is not supported by the underlying API.\n\n4. Where possible, hacks should be added on specific managers to emulate\n   methods are not natively supported by the API. For example, `in_bulk`  may\n   be emulated by making multiple calls, etc.\n\nAny client extending this library should do the utmost to avoid breaking the\nfundamental API contract that this library provides.\n\n## Example ##\n\nThe following shows off a variety of the features of the client:\n\n```javascript\nvar Keystone = require(\"openclient\").getAPI('openstack', 'identity', '2.0');\n\nvar client = new Keystone({\n  url: <auth url>,\n  debug: true\n})\n\nclient.authenticate({\n    username: <username>,\n    password: <password>,\n    project: <project name>\n  // Callbacks can either be success/error handlers in the options object or\n  // a callback function as the last argument.\n  }, function (err, token) {\n  client.projects.all({\n    endpoint_type: \"adminURL\",  // Defaults to \"publicURL\".\n\n    // Callbacks receive the result of the call;\n    success: function (projects) {\n      var updated_project, project = projects[0];\n      client.projects.update({\n        endpoint_type: \"adminURL\",\n        id: project.id,\n        data: {\n          name: <new name>\n        },\n        success: function (updated_project) {\n          updated_project.name === <new name>;  // true\n        },\n        error: function (err) {\n          console.error(err);\n        }\n      });\n    },\n    error: function (err) {\n      console.error(err);\n    }\n  });\n});\n\n```\n\nPlenty more examples are available in the integration tests for the clients\nthemselves.\n\n## API Methods ##\n\nThe primary methods that the base `Manager` class exposes are:\n\n* `all`: retrieve a list of all available resources.\n* `get`: retrieve a single resource.\n* `create`: create a new resource.\n* `update`: update an existing resource.\n* `del`: delete an existing resource.\n* `in_bulk`: retrieve each of the resources in a given list of ids.\n* `filter`: retrieve a list of resources which match the filter criteria. (not yet implemented in most cases)\n\n## Running the tests ##\n\nThe tests for the clients are __entirely__ integration tests. They require\na functioning OpenStack deployment, and are best-tested against a clean\nDevStack deployment.\n\nTo run the tests for a given client, use the test runner with your OpenStack\ncredentials (using a fresh DevStack installation is recommended); you may set\nthe standard `OS_` variables in the environment, or you can pass the required\narguments like so:\n\n```\nnode <client dir>/tests/run.js\n    --url=http://<keystone url>:5000/v2.0\n    --username=<admin username>\n    --project=<admin project>\n    --password=<admin password>\n```\n\n## License ##\n\nThis library is published under a BSD license and may be freely used in\naccordance with those terms.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/gabrielhurley/js-openclient/issues"
  },
  "_id": "openclient@1.7.9",
  "dist": {
    "shasum": "dce4b059310e3cddbfcd86da8b467ba756ef0803"
  },
  "_from": "openclient@^1.7.8",
  "_resolved": "https://registry.npmjs.org/openclient/-/openclient-1.7.9.tgz"
}
